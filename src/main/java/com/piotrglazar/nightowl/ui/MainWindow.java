package com.piotrglazar.nightowl.ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import com.piotrglazar.nightowl.configuration.Localisation;
import org.springframework.stereotype.Component;

import javax.swing.*;
import java.awt.*;
import java.time.LocalDateTime;
import java.time.LocalTime;
import java.time.format.DateTimeFormatter;

@Component
public class MainWindow {
    private JPanel mainPanel;
    private JLabel timeLabel;
    private JLabel siderealHourAngleLabel;
    private JLabel cityName;
    private JLabel cityLatitude;
    private JLabel cityLongitude;
    private JLabel stars;
    private DateTimeFormatter dateTimeFormatter = DateTimeFormatter.ofPattern("dd-MM-yyyy HH:mm:ss");
    private DateTimeFormatter timeFormatter = DateTimeFormatter.ofPattern("HH:mm:ss");

    public MainWindow preDisplay() {
        timeLabel.setText(LocalDateTime.now().format(dateTimeFormatter));
        siderealHourAngleLabel.setText(LocalDateTime.now().format(dateTimeFormatter));
        cityName.setText(Localisation.WARSAW_CITY_NAME);
        cityLatitude.setText(String.format("Latitude: %s N", Localisation.WARSAW_LATIDUDE.getLatitude()));
        cityLongitude.setText(String.format("Longitude: %s E", Localisation.WARSAW_LONGITUDE.getLongitude()));
        return this;
    }

    public JPanel getMainPanel() {
        return mainPanel;
    }

    public void setSiderealHourAngleLabel(final LocalTime siderealHourAngle) {
        siderealHourAngleLabel.setText(siderealHourAngle.format(timeFormatter));
    }

    public void setTimeLabel(final LocalDateTime now) {
        timeLabel.setText(now.format(dateTimeFormatter));
    }

    public void setNumberOfStars(long numberOfStars) {
        stars.setText("Number of stars: " + numberOfStars);
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new GridLayoutManager(5, 4, new Insets(0, 0, 0, 0), -1, -1));
        final Spacer spacer1 = new Spacer();
        mainPanel.add(spacer1, new GridConstraints(1, 3, 3, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("NightOwl welcomes the world");
        mainPanel.add(label1, new GridConstraints(0, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(80, 16), null, 0, false));
        timeLabel = new JLabel();
        timeLabel.setText("You will see time here");
        mainPanel.add(timeLabel, new GridConstraints(3, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        siderealHourAngleLabel = new JLabel();
        siderealHourAngleLabel.setText("You will see sidereal hour angle here");
        mainPanel.add(siderealHourAngleLabel, new GridConstraints(2, 0, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cityName = new JLabel();
        cityName.setText("cityName");
        mainPanel.add(cityName, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cityLatitude = new JLabel();
        cityLatitude.setText("Latitude: ");
        mainPanel.add(cityLatitude, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cityLongitude = new JLabel();
        cityLongitude.setText("Longitude:");
        mainPanel.add(cityLongitude, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        stars = new JLabel();
        stars.setText("stars: 0");
        mainPanel.add(stars, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
