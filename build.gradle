buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
    }
}

plugins {
    id 'pl.allegro.tech.build.axion-release' version '1.0.0'
}

apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'application'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'
apply plugin: 'sonar-runner'
apply plugin: 'findbugs'
apply plugin: 'checkstyle'
apply plugin: 'pmd'

repositories {
    mavenCentral()
}

dependencies {
    // gui
    compile files("./external/intellij_forms_rt.jar")
    // guava
    compile("com.google.guava:guava:18.0")
    // context
    compile("org.springframework:spring-context:4.1.3.RELEASE")
    // context-support
    compile("org.springframework:spring-context-support:4.1.3.RELEASE")
    // tag
    compile("org.slf4j:slf4j-api:1.7.8")
    compile("ch.qos.logback:logback-classic:1.1.2")
    // db
    compile("org.hibernate:hibernate-entitymanager:4.3.7.Final")
    compile("org.hibernate.javax.persistence:hibernate-jpa-2.0-api:1.0.1.Final")
    compile("org.springframework.data:spring-data-jpa:1.7.1.RELEASE")
    compile("org.hsqldb:hsqldb:2.3.2")
    // annotations
    compile("com.google.code.findbugs:jsr305:3.0.0")
    compile("com.nesscomputing.testing:findbugs-annotations:2.0.0")

    testCompile("org.springframework:spring-test:4.1.3.RELEASE")
    testCompile("junit:junit:4.12")
    testCompile("org.mockito:mockito-all:1.10.16")
    testCompile("org.assertj:assertj-core:1.7.0")
    testCompile("com.googlecode.catch-exception:catch-exception:1.2.0")
    testCompile("nl.jqno.equalsverifier:equalsverifier:1.5.1")
    testCompile("pl.pragmatists:JUnitParams:1.0.3")
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

idea {
    module {
        downloadJavadoc = true
        downloadSources = true
    }
}

jacoco {
    toolVersion = '0.7.2.+'
}

jacocoTestReport {
    reports {
        html.destination "$buildDir/reports/jacoco"
        xml.enabled = true
        html.enabled = true
    }
}

sonarRunner {
    toolVersion = '2.4'
    sonarProperties {
        property "sonar.exclusions", "src/main/java/com/piotrglazar/nightowl/configuration/*.java," +
                    "src/main/java/com/piotrglazar/nightowl/dbscript/DatabaseScriptConfiguration.java," +
                    "src/main/java/com/piotrglazar/nightowl/importers/ImporterConfiguration.java," +
                    "src/main/java/com/piotrglazar/nightowl/ui/DefaultMainWindow.java"
    }
}

sourceCompatibility = 1.8

mainClassName = "com.piotrglazar.nightowl.NightOwl"

checkstyle {
    toolVersion = '6.1'
    ignoreFailures = true
}

pmd {
    ignoreFailures = true
}

findbugs {
    toolVersion = '3.0.0'
    effort = 'max'
    ignoreFailures = true
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
}

scmVersion {
    tag {
        prefix = 'night-owl'
    }
}

// make our version available to all
project.version = scmVersion.version

jar {
    baseName = 'night-owl'
    version =  project.version
    manifest {
        attributes 'Main-Class': 'com.piotrglazar.nightowl.NightOwl'
    }
}
